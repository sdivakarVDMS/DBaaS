swagger: '2.0'
info:
  title: DB as a Service ( DBAAS )
  description: This would provide DB Service to external world. The users 
      can use to service to store / retrieve / update data. The service will
      provide both the SQL and No-SQL endpoints. Testing the changes when done in git.
  version: "8234aab51481d37a30757d925b7f4221a659427e"
host: san_dbaas.apiblueprint.org
schemes:
  - https

    
paths:
  /v1/pgsql/db:
    x-summary: An ACID complaint SQL Database
    x-description: 'The Postgres-9.5 with `postgres` as the root role'
    get:
      summary: Get All DBs
      responses:
        200:
          description: 'List'
          examples:
            application/json:
              - query: "List of DBs"
                published_at: "2015-08-05T08:40:51.620Z"
                db_list:
                  - db_name: "ci_cd"
                    tables: 20
                  - db_name: "auth"
                    tables: 10
                  - db_name: "net_op"
                    tables: 5
                  - db_name: "datastore"
                    tables: 200
  /v1/pgsql/db/{dbName}:
    x-summary: The specific DB.
    x-description: All operations to deal with one specific DB within the posgresql
    parameters:
      - name : dbName
        in: path
        type: string
        required: true
        description: The Name of the Database
        
    get:
      summary: Get details of DB.
      responses:
        200:
          description: 'Get the details'
          examples:
            application/json:
              query: "Get "
              published_at: "2014-11-11T08:40:51.620Z"
              db_name: "ci_cd"
              tables: 10
    put:
      summary: Create the DB given by the parameter. 
      responses:
        201:
          description: 'Created'
          examples:
            application/json:
              query: "Create "
              published_at: "2014-11-11T08:40:51.620Z"
              db_name: "ci_cd"
              tables: 0
  /v1/pgsql/db/{dbName}/table/{tableName}:
    x-summary: Table in a specific DB
    x-description: All operations to deal with the specified table
    parameters:
      - name : dbName
        in: path
        type: string
        required: true
        description: The Name of the Database
      - name : tableName
        in: path
        type: string
        required: true
        description: The Name of the Database
        
    get:
      summary: Get Table details.
      responses:
        200:
          description: 'Get the details'
          examples:
            application/json:
              query: "Get "
              published_at: "2014-11-11T08:40:51.620Z"
              db_name: "ci_cd"
              table_name: "nae_publish"
              tables: 10
    put:
      summary: Create the Table in the specific DB
      responses:
        201:
          description: 'Created'
          examples:
            application/json:
              query: "Create "
              published_at: "2014-11-11T08:40:51.620Z"
              db_name: "ci_cd"
              tables: 0
    post:
      summary: Create the Table in the specific DB
      responses:
        201:
          description: 'Created'
          examples:
            application/json:
              query: "Create "
              published_at: "2014-11-11T08:40:51.620Z"
              db_name: "ci_cd"
              tables: 0
